package BasicHTMLGeneratorParser.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new BotonTag_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new BotonsTag_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new Color_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Columna_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new Componentes_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new ContenidoOpcion_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new Document_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new Element_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new ElementBoton_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new Elements_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new Etiqueta_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new EtiquetaTag_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new EtiquetasTag_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new Formulario_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new Opcion_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new OpcionSelector_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new OpcionsSelector_Editor());
      case 17:
        return Collections.<ConceptEditor>singletonList(new SelectorsTag_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8f09L), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8f07L), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8f0aL), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8efcL), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8efeL), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8f06L), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x4e1fcda545f5ef3bL), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8efdL), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8f08L), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x4e1fcda545f5ef3cL), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8f00L), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8f01L), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8effL), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8f1eL), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8f04L), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8f05L), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8f03L), MetaIdFactory.conceptId(0xc5b04c8306054412L, 0x977887c884988a45L, 0x2c774475217a8f02L)).seal();
}
