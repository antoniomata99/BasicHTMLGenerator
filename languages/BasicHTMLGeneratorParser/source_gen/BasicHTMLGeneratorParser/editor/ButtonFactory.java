package BasicHTMLGeneratorParser.editor;

/*Generated by MPS */

import javax.swing.JComponent;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.awt.Font;
import jetbrains.mps.nodeEditor.EditorSettings;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class ButtonFactory {
  public static JComponent createToHTMLButton(final EditorContext editorContext, final SNode node) {
    JButton button = createButton(node, editorContext, "Export to HTML", new Runnable() {
      @Override
      public void run() {
        JFileChooser jfc = new JFileChooser();
        jfc.showSaveDialog(null);
        File f = jfc.getSelectedFile();
        try {
          FileWriter fm = new FileWriter(f);
        } catch (IOException e) {
        }
      }
    });

    return button;
  }

  private static JButton createButton(final SNode node, final EditorContext editorContext, String title, final Runnable action) {
    JButton button = new JButton(title);
    button.setFont(new Font(EditorSettings.getInstance().getFontFamily(), Font.PLAIN, EditorSettings.getInstance().getFontSize() / 6 * 5));
    button.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent p0) {
        editorContext.getRepository().getModelAccess().executeCommandInEDT(action);
      }
    });
    return button;
  }
}
